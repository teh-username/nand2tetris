// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    RAM4K(in=in, load=w1l, out=w1o, address=address[0..11]);
    RAM4K(in=in, load=w2l, out=w2o, address=address[0..11]);
    RAM4K(in=in, load=w3l, out=w3o, address=address[0..11]);
    RAM4K(in=in, load=w4l, out=w4o, address=address[0..11]);

    DMux4Way(in=load, sel=address[12..13], a=w1l, b=w2l, c=w3l, d=w4l);
    Mux4Way16(out=out, sel=address[12..13], a=w1o, b=w2o, c=w3o, d=w4o);
}
